Performance Test Results

c4lib stores its internal representation of a save using Boost Property Tree and uses std::string for both
the property tree key and value.  Because of this, c4lib will be intrinsically slower than an editor that
represents saves using binary.

c4lib's predecessor, SavedGameEditor, uses binary to store internal state.  Tables 1 and 2 compare
SavedGameEditor's with that of c4lib.  

========================================================================================================================
Table 1: Time in Milliseconds to Process BC-4000-2.CivBeyondSwordSave
Editor                 Read Save        Write Text        Total
SavedGameEditor          58             1156              1214
c4lib                  1118              646              1764

Notes:
Both SavedGameEditor and c4lib were compiled using Clang 19.1.3 with the following flags:
SavedGameEditor: -O3 -DNDEBUG -std=gnu++20 -fansi-escape-codes -fcolor-diagnostics
c4lib: -Wall -Wextra -Wno-unknown-pragmas -O3 -DNDEBUG -std=gnu++20 -fansi-escape-codes -fcolor-diagnostics
========================================================================================================================

========================================================================================================================
Table 2: Mao Zedong_1936-AD_Feb-26-2023_07-31-57.CivBeyondSwordSave
Editor                 Read Save        Write Text        Total
SavedGameEditor         316             5632              5948
c4lib                  4892             3407              8299

Notes:
Both SavedGameEditor and c4lib were compiled using Clang 19.1.3 with the following flags:
SavedGameEditor: -O3 -DNDEBUG -std=gnu++20 -fansi-escape-codes -fcolor-diagnostics
c4lib: -Wall -Wextra -Wno-unknown-pragmas -O3 -DNDEBUG -std=gnu++20 -fansi-escape-codes -fcolor-diagnostics
========================================================================================================================

It should be noted that c4lib is schema-based and thus must parse its schema before it begins to read a save.
SavedGameEditor was hard-coded to support a particular layout and performs no processing, other than initial
setup, prior to reading a save.  SavedGameEditor is much faster than c4lib when reading saves due
to the extra work c4lib must perform.

Unexpectedly, SavedGameEditor is slower than c4lib when writing text output.  SavedGameEditor should be 
faster than c4lib due to its binary representation of data and because its output is not quite as large.

Table 3, below, documents the performance improvements made optimizing c4lib's ptree search algorithm.  Three
compilers were tested both for sake of comparison and to determine which compiler gives the best performance.
========================================================================================================================
Table 3: Time In Milliseconds To Process Brennus BC-4000-2.CivBeyondSwordSave
Compiler Used                    Baseline      Recursive From Parent     Non-Recursive 
GCC 14.2.0                       9312          1938                      1926
Clang 19.1.3                     8707          1099                      1099
MSVC 16.00.30319.01              9630          1290                      1289

Notes:
Baseline - Broken recursive search starting at root
Recursive From Parent - Working recursive search starting at parent
Non-Recursive - Working non-recursive search starting at parent
========================================================================================================================

Table 4, below, documents the performance of c4edit following the change to compiler and linker settings to
harden the code against attack.
========================================================================================================================
Table 4: Time In Milliseconds To Read Brennus BC-4000-2.CivBeyondSwordSave
Compiler Used                    Read Save        Write Text        Total
GCC 14.2.0                       1943              719              2662
Clang 19.1.3                     1124              632              1756
MSVC 16.00.30319.01              1300             1082              2382

========================================================================================================================